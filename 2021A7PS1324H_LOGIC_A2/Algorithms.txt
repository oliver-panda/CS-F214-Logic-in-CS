The Algorithm Covers 5 Proof Rules of Propositional Logic:
    - Premise
    - AND Introduction/Elimination
    - OR Introduction
    - IMPL Elimination
    - Modus Tollens

Each Line of Input has been divided into 2 Arrays: *proof* and *rule*.

proof is a 2D Array including all the proofs.
rule is a 2D Array including all the proof rules with their line numbers corresponding to the proof.

In order to check whether a certain line is valid or not, a *control* variable has been introduced,
which breaks the *Validity* function when the proof in the input and the proof generated are not the same.
Hence, telling that the proof is Invalid.

If proof in the input and proof generated by string concatenation are the same,
the proof is Valid.

Example Outputs:

    Input:
    2
    a/P
    (a+d)/+i1/1

    Output:
    Valid


    Input:
    2
    a/P
    b/+i1/1

    Output:
    Invalid


    Input:
    5
    a/P
    (a>b)/P
    (b>c)/P
    b/>e/2/1
    c/>e/3/4

    Output:
    Valid